@model BlogApp.ViewModels.ResumeViewModel

@{
    ViewData["Title"] = "Edit Resume";
}

<div class="container my-5">
    <h2 class="mb-4">Edit Resume</h2>

    <form asp-action="Edit" method="post">
        <input type="hidden" asp-for="Id" />

        <div class="card mb-4">
            <div class="card-body">
                <h3 class="h5 mb-3">Personal Information</h3>

                <div class="mb-3">
                    <label asp-for="FullName" class="form-label">Full Name</label>
                    <input asp-for="FullName" class="form-control" />
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Title" class="form-label">Professional Title</label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Summary" class="form-label">Professional Summary</label>
                    <textarea asp-for="Summary" class="form-control" rows="4"></textarea>
                    <span asp-validation-for="Summary" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Location" class="form-label">Location</label>
                    <input asp-for="Location" class="form-control" />
                    <span asp-validation-for="Location" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Email" class="form-label">Email</label>
                    <input asp-for="Email" class="form-control" type="email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Phone" class="form-label">Phone</label>
                    <input asp-for="Phone" class="form-control" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Website" class="form-label">Website</label>
                    <input asp-for="Website" class="form-control" type="url" />
                    <span asp-validation-for="Website" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="LinkedIn" class="form-label">LinkedIn Profile</label>
                    <input asp-for="LinkedIn" class="form-control" type="url" />
                    <span asp-validation-for="LinkedIn" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="GitHub" class="form-label">GitHub Profile</label>
                    <input asp-for="GitHub" class="form-control" type="url" />
                    <span asp-validation-for="GitHub" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="ProfileImage" class="form-label">Profile Image URL</label>
                    <input asp-for="ProfileImage" class="form-control" type="url" />
                    <span asp-validation-for="ProfileImage" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="text-end">
            <a asp-action="Index" class="btn btn-secondary me-2">Cancel</a>
            <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
    </form>

    <!-- Work Experience Section -->
    <div class="card mt-4">
        <div class="card-body">
            <h3 class="h5 mb-3">Work Experience</h3>
            <div id="workExperienceList">
                @foreach (var experience in Model.WorkExperiences)
                {
                    <div class="work-experience-item mb-3 p-3 border rounded">
                        <h4 class="h6">@experience.Position at @experience.CompanyName</h4>
                        <p class="mb-2">
                            @experience.StartDate.ToString("MMM yyyy") -
                            @(experience.EndDate?.ToString("MMM yyyy") ?? "Present")
                        </p>
                        <div class="mt-2">
                            <button type="button" class="btn btn-sm btn-danger"
                                onclick="deleteWorkExperience(@experience.Id)">Delete</button>
                        </div>
                    </div>
                }
            </div>
            <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal"
                data-bs-target="#addWorkExperienceModal">
                Add Work Experience
            </button>
        </div>
    </div>

    <!-- Education Section -->
    <div class="card mt-4">
        <div class="card-body">
            <h3 class="h5 mb-3">Education</h3>
            <div id="educationList">
                @foreach (var education in Model.Education)
                {
                    <div class="education-item mb-3 p-3 border rounded">
                        <h4 class="h6">@education.Degree in @education.FieldOfStudy</h4>
                        <p class="mb-2">@education.InstitutionName</p>
                        <p class="mb-2">
                            @education.StartDate.ToString("MMM yyyy") -
                            @(education.EndDate?.ToString("MMM yyyy") ?? "Present")
                        </p>
                        <div class="mt-2">
                            <button type="button" class="btn btn-sm btn-danger"
                                onclick="deleteEducation(@education.Id)">Delete</button>
                        </div>
                    </div>
                }
            </div>
            <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal"
                data-bs-target="#addEducationModal">
                Add Education
            </button>
        </div>
    </div>

    <!-- Skills Section -->
    <div class="card mt-4">
        <div class="card-body">
            <h3 class="h5 mb-3">Skills</h3>
            <div id="skillsList">
                @foreach (var skill in Model.Skills)
                {
                    <div class="skill-item mb-3 p-3 border rounded">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="h6 mb-1">@skill.Name</h4>
                                <p class="mb-1 text-muted">Category: @skill.Category</p>
                                <div class="progress" style="width: 200px; height: 8px;">
                                    <div class="progress-bar bg-primary" role="progressbar"
                                        style="width: @(skill.ProficiencyLevel * 25)%;"
                                        aria-valuenow="@(skill.ProficiencyLevel * 25)" aria-valuemin="0"
                                        aria-valuemax="100">
                                    </div>
                                </div>
                                <small class="text-muted">@GetProficiencyText(skill.ProficiencyLevel)</small>
                            </div>
                            <div>
                                <button type="button" class="btn btn-sm btn-danger"
                                    onclick="deleteSkill(@skill.Id)">Delete</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#addSkillModal">
                Add Skill
            </button>
        </div>
    </div>

    <!-- Projects Section -->
    <div class="card mt-4">
        <div class="card-body">
            <h3 class="h5 mb-3">Projects</h3>
            <div id="projectsList">
                @foreach (var project in Model.Projects)
                {
                    <div class="project-item mb-3 p-3 border rounded">
                        <h4 class="h6">@project.Name</h4>
                        <p class="mb-2">@project.Description</p>
                        <div class="mt-2">
                            <button type="button" class="btn btn-sm btn-danger"
                                onclick="deleteProject(@project.Id)">Delete</button>
                        </div>
                    </div>
                }
            </div>
            <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#addProjectModal">
                Add Project
            </button>
        </div>
    </div>

    <!-- Certificates Section -->
    <div class="card mt-4">
        <div class="card-body">
            <h3 class="h5 mb-3">Certificates</h3>
            <div id="certificatesList">
                @foreach (var certificate in Model.Certificates)
                {
                    <div class="certificate-item mb-3 p-3 border rounded">
                        <h4 class="h6">@certificate.Name</h4>
                        <p class="mb-2">@certificate.IssuingOrganization</p>
                        <div class="mt-2">
                            <button type="button" class="btn btn-sm btn-danger"
                                onclick="deleteCertificate(@certificate.Id)">Delete</button>
                        </div>
                    </div>
                }
            </div>
            <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal"
                data-bs-target="#addCertificateModal">
                Add Certificate
            </button>
        </div>
    </div>
</div>

<!-- Add Work Experience Modal -->
<div class="modal fade" id="addWorkExperienceModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Work Experience</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addWorkExperienceForm">
                    <div class="mb-3">
                        <label for="companyName" class="form-label">Company Name</label>
                        <input type="text" class="form-control" id="companyName" name="companyName" required>
                    </div>
                    <div class="mb-3">
                        <label for="position" class="form-label">Position</label>
                        <input type="text" class="form-control" id="position" name="position" required>
                    </div>
                    <div class="mb-3">
                        <label for="location" class="form-label">Location</label>
                        <input type="text" class="form-control" id="location" name="location">
                    </div>
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="month" class="form-control" id="startDate" name="startDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="month" class="form-control" id="endDate" name="endDate">
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="companyUrl" class="form-label">Company URL</label>
                        <input type="url" class="form-control" id="companyUrl" name="companyUrl">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addWorkExperience()">Add</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Education Modal -->
<div class="modal fade" id="addEducationModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Education</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addEducationForm">
                    <div class="mb-3">
                        <label for="institutionName" class="form-label">Institution Name</label>
                        <input type="text" class="form-control" id="institutionName" name="institutionName" required>
                    </div>
                    <div class="mb-3">
                        <label for="degree" class="form-label">Degree</label>
                        <input type="text" class="form-control" id="degree" name="degree" required>
                    </div>
                    <div class="mb-3">
                        <label for="fieldOfStudy" class="form-label">Field of Study</label>
                        <input type="text" class="form-control" id="fieldOfStudy" name="fieldOfStudy" required>
                    </div>
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="month" class="form-control" id="startDate" name="startDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="month" class="form-control" id="endDate" name="endDate">
                    </div>
                    <div class="mb-3">
                        <label for="grade" class="form-label">Grade</label>
                        <input type="text" class="form-control" id="grade" name="grade">
                    </div>
                    <div class="mb-3">
                        <label for="activities" class="form-label">Activities</label>
                        <textarea class="form-control" id="activities" name="activities" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addEducation()">Add</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Skill Modal -->
<div class="modal fade" id="addSkillModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Skill</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addSkillForm">
                    <div class="mb-3">
                        <label for="skillName" class="form-label">Skill Name</label>
                        <input type="text" class="form-control" id="skillName" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="category" class="form-label">Category</label>
                        <input type="text" class="form-control" id="category" name="category" required>
                    </div>
                    <div class="mb-3">
                        <label for="proficiencyLevel" class="form-label">Proficiency Level</label>
                        <select class="form-select" id="proficiencyLevel" name="proficiencyLevel" required>
                            <option value="1">Beginner</option>
                            <option value="2">Intermediate</option>
                            <option value="3">Advanced</option>
                            <option value="4">Expert</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addSkill()">Add</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Project Modal -->
<div class="modal fade" id="addProjectModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Project</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addProjectForm">
                    <div class="mb-3">
                        <label for="projectName" class="form-label">Project Name</label>
                        <input type="text" class="form-control" id="projectName" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="projectDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="projectDescription" name="description" rows="3"
                            required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="projectUrl" class="form-label">Project URL</label>
                        <input type="url" class="form-control" id="projectUrl" name="projectUrl">
                    </div>
                    <div class="mb-3">
                        <label for="githubUrl" class="form-label">GitHub URL</label>
                        <input type="url" class="form-control" id="githubUrl" name="githubUrl">
                    </div>
                    <div class="mb-3">
                        <label for="technologies" class="form-label">Technologies (comma-separated)</label>
                        <input type="text" class="form-control" id="technologies" name="technologies" required>
                    </div>
                    <div class="mb-3">
                        <label for="projectStartDate" class="form-label">Start Date</label>
                        <input type="month" class="form-control" id="projectStartDate" name="startDate">
                    </div>
                    <div class="mb-3">
                        <label for="projectEndDate" class="form-label">End Date</label>
                        <input type="month" class="form-control" id="projectEndDate" name="endDate">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addProject()">Add</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Certificate Modal -->
<div class="modal fade" id="addCertificateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Certificate</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addCertificateForm">
                    <div class="mb-3">
                        <label for="certificateName" class="form-label">Certificate Name</label>
                        <input type="text" class="form-control" id="certificateName" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="issuingOrganization" class="form-label">Issuing Organization</label>
                        <input type="text" class="form-control" id="issuingOrganization" name="issuingOrganization"
                            required>
                    </div>
                    <div class="mb-3">
                        <label for="issueDate" class="form-label">Issue Date</label>
                        <input type="month" class="form-control" id="issueDate" name="issueDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="expiryDate" class="form-label">Expiry Date</label>
                        <input type="month" class="form-control" id="expiryDate" name="expiryDate">
                    </div>
                    <div class="mb-3">
                        <label for="credentialUrl" class="form-label">Credential URL</label>
                        <input type="url" class="form-control" id="credentialUrl" name="credentialUrl">
                    </div>
                    <div class="mb-3">
                        <label for="credentialId" class="form-label">Credential ID</label>
                        <input type="text" class="form-control" id="credentialId" name="credentialId">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addCertificate()">Add</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function addWorkExperience() {
            const form = document.getElementById('addWorkExperienceForm');
            const formData = new FormData(form);

            fetch('@Url.Action("AddWorkExperience")', {
                method: 'POST',
                body: new URLSearchParams(formData),
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    }
                });
        }

        function deleteWorkExperience(id) {
            if (confirm('Are you sure you want to delete this work experience?')) {
                fetch(`@Url.Action("DeleteWorkExperience")?id=${id}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        }
                    });
            }
        }

        function addEducation() {
            const form = document.getElementById('addEducationForm');
            const formData = new FormData(form);

            fetch('@Url.Action("AddEducation")', {
                method: 'POST',
                body: new URLSearchParams(formData),
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    }
                });
        }

        function deleteEducation(id) {
            if (confirm('Are you sure you want to delete this education entry?')) {
                fetch(`@Url.Action("DeleteEducation")?id=${id}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        }
                    });
            }
        }

        function addSkill() {
            const form = document.getElementById('addSkillForm');
            const formData = new FormData(form);

            fetch('@Url.Action("AddSkill")', {
                method: 'POST',
                body: new URLSearchParams(formData),
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    }
                });
        }

        function deleteSkill(id) {
            if (confirm('Are you sure you want to delete this skill?')) {
                fetch(`@Url.Action("DeleteSkill")?id=${id}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        }
                    });
            }
        }

        function addProject() {
            const form = document.getElementById('addProjectForm');
            const formData = new FormData(form);

            fetch('@Url.Action("AddProject")', {
                method: 'POST',
                body: new URLSearchParams(formData),
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    }
                });
        }

        function deleteProject(id) {
            if (confirm('Are you sure you want to delete this project?')) {
                fetch(`@Url.Action("DeleteProject")?id=${id}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        }
                    });
            }
        }

        function addCertificate() {
            const form = document.getElementById('addCertificateForm');
            const formData = new FormData(form);

            fetch('@Url.Action("AddCertificate")', {
                method: 'POST',
                body: new URLSearchParams(formData),
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    }
                });
        }

        function deleteCertificate(id) {
            if (confirm('Are you sure you want to delete this certificate?')) {
                fetch(`@Url.Action("DeleteCertificate")?id=${id}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        }
                    });
            }
        }
    </script>
}

<style>
    .card {
        background-color: var(--nav-bg);
        border: 1px solid var(--border-color);
    }

    .form-control {
        background-color: var(--bg-color);
        border-color: var(--border-color);
        color: var(--text-color);
    }

    .form-control:focus {
        background-color: var(--bg-color);
        border-color: var(--primary-color);
        color: var(--text-color);
    }

    .modal-content {
        background-color: var(--nav-bg);
        color: var(--text-color);
    }

    .modal-header {
        border-bottom-color: var(--border-color);
    }

    .modal-footer {
        border-top-color: var(--border-color);
    }

    .btn-close {
        filter: invert(1);
    }
</style>

@functions {
    private string GetProficiencyText(int level)
    {
        return level switch
        {
            1 => "Beginner",
            2 => "Intermediate",
            3 => "Advanced",
            4 => "Expert",
            _ => "Unknown"
        };
    }
}